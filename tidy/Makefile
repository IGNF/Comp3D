COMPILE_DIR:=..
CLANG_TIDY=clang-tidy

CLANG_DB=compile_commands.json
CLANG_CONFIG_TIDY=clang-tidy-simple
CLANG_CONFIG_EXTRA=clang-tidy-extra

ifdef V
  VER=
  NOERROR=
else
  VER=@
  NOERROR=2>/dev/null
endif

.phony: all help really_all clean distclean

all: help

help:
	@echo "Usage: make COMPILE_DIR=<dir> [-j n] [all_tidy  | source.[h|cpp].tidy]"
	@echo "   dir: Directory where the Makefile generated by qmake is."
	@echo "   all_tidy: analyse all source files. May be very time consuming."
	@echo "   source.[h|cpp].tidy: analyse the source.h or source.cpp file."
	@echo ""
	@echo "  Alternatively, targets all_extra or source.[h|cpp].extra may be used"
	@echo "to have a more verbose analyse report."
	@echo ""
	@echo "  At the first run, or whenever the Makefile change, a compile options"
	@echo "database will be created. This requires to clean and recompile all the"
	@echo "project."
	@echo ""
	@echo "make clean      => clean all report files."
	@echo "make distclean  => clean + delete compile options database."
	@echo ""
	@echo "Pre-requisite: clang-tidy bear ."
	@echo "sudo apt install clang-tidy bear"

SRC_CPP=$(filter-out ../src/jsoncpp.cpp,$(wildcard ../src/*.cpp))
SRC_H=$(wildcard ../src/*.h)
GUI_CPP=$(wildcard ../gui/*.cpp)
GUI_H=$(wildcard ../gui/*.h)

ALL_SRC=$(SRC_CPP) $(SRC_H) $(GUI_CPP) $(GUI_H)
ALL_TIDY=$(addsuffix .tidy,$(notdir $(ALL_SRC)))
ALL_EXTRA=$(addsuffix .extra,$(notdir $(ALL_SRC)))

all_tidy: $(ALL_TIDY)
all_extra: $(ALL_EXTRA)


$(CLANG_DB): $(COMPILE_DIR)/Makefile
	@echo "Generating the compile option database for clang-tidy"
	@rm -f $(CLANG_DB)
	@$(MAKE) -C $(COMPILE_DIR) clean
	@bear -- $(MAKE) -C $(COMPILE_DIR)  || rm -f $@

define TIDY_RULE
$(1):$(2) $(CLANG_DB) $(CLANG_CONFIG)
	@echo "Generating $1 from $2 ..."
	$(VER)$(CLANG_TIDY) --config-file=$3 -p $(CLANG_DB) $2 >$1 $(NOERROR) 
endef

$(foreach i_FILE,  $(ALL_SRC), $(eval $(call TIDY_RULE, $(notdir $(i_FILE).tidy),$(i_FILE),$(CLANG_CONFIG_TIDY))))
$(foreach i_FILE,  $(ALL_SRC), $(eval $(call TIDY_RULE, $(notdir $(i_FILE).extra),$(i_FILE),$(CLANG_CONFIG_EXTRA))))

clean:
	rm -f *.tidy *.extra

distclean: clean
	rm -f $(CLANG_DB)
